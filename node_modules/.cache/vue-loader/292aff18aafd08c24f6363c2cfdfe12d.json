{"remainingRequest":"C:\\Users\\Ayodeji\\Desktop\\2020 Projects\\weblog\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Ayodeji\\Desktop\\2020 Projects\\weblog\\src\\components\\Check.vue?vue&type=style&index=0&id=06880d08&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\Ayodeji\\Desktop\\2020 Projects\\weblog\\src\\components\\Check.vue","mtime":1597353672693},{"path":"C:\\Users\\Ayodeji\\Desktop\\2020 Projects\\weblog\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Ayodeji\\Desktop\\2020 Projects\\weblog\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Ayodeji\\Desktop\\2020 Projects\\weblog\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Ayodeji\\Desktop\\2020 Projects\\weblog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Ayodeji\\Desktop\\2020 Projects\\weblog\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmlucHV0LWNvbnRhaW5lciB7CiAgd2lkdGg6IDcwJTsKICBtYXJnaW46IDAgYXV0bzsKfQojcG9zdC10aXRsZSB7CiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsKICBoZWlnaHQ6IDUwcHg7CiAgYmFja2dyb3VuZDogI2RkZDsKICBtYXJnaW46IDVweDsKICBkaXNwbGF5OiBmbGV4OwogIGp1c3RpZnktY29udGVudDogY2VudGVyOwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgYm9yZGVyLXJhZGl1czogMTBweDsKICBwYWRkaW5nOiAxMHB4Owp9CmJ1dHRvbi5wYWdlLWxpbmsgewogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKfQpidXR0b24ucGFnZS1saW5rIHsKICBmb250LXNpemU6IDIwcHg7CiAgY29sb3I6ICMyOWIzZWQ7CiAgZm9udC13ZWlnaHQ6IDUwMDsKfQo="},{"version":3,"sources":["Check.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Check.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n<div>\r\n  <b-navbar toggleable=\"lg\" type=\"dark\" variant=\"info\">\r\n    <b-navbar-brand href=\"#\">NavBar</b-navbar-brand>\r\n\r\n    <b-navbar-toggle target=\"nav-collapse\"></b-navbar-toggle>\r\n\r\n    <b-collapse id=\"nav-collapse\" is-nav>\r\n      <b-navbar-nav>\r\n        <b-nav-item href=\"#\">Link</b-nav-item>\r\n        <b-nav-item href=\"#\" disabled>Disabled</b-nav-item>\r\n      </b-navbar-nav>\r\n\r\n      <!-- Right aligned nav items -->\r\n      <b-navbar-nav class=\"ml-auto\">\r\n        <b-nav-form>\r\n          <b-form-input size=\"sm\" class=\"mr-sm-2\" placeholder=\"Search\"></b-form-input>\r\n          <b-button size=\"sm\" class=\"my-2 my-sm-0\" type=\"submit\">Search</b-button>\r\n        </b-nav-form>\r\n\r\n        <b-nav-item-dropdown text=\"Lang\" right>\r\n          <b-dropdown-item href=\"#\">EN</b-dropdown-item>\r\n          <b-dropdown-item href=\"#\">ES</b-dropdown-item>\r\n          <b-dropdown-item href=\"#\">RU</b-dropdown-item>\r\n          <b-dropdown-item href=\"#\">FA</b-dropdown-item>\r\n        </b-nav-item-dropdown>\r\n\r\n        <b-nav-item-dropdown right>\r\n          <!-- Using 'button-content' slot -->\r\n          <template v-slot:button-content>\r\n            <em>User</em>\r\n          </template>\r\n          <b-dropdown-item href=\"#\">Profile</b-dropdown-item>\r\n          <b-dropdown-item href=\"#\">Sign Out</b-dropdown-item>\r\n        </b-nav-item-dropdown>\r\n      </b-navbar-nav>\r\n    </b-collapse>\r\n  </b-navbar>\r\n</div>\r\n  <div class=\"input-container\">\r\n    <h1 class=\"mb-3\">Trending Topics</h1>\r\n    <div\r\n      id=\"post-title\"\r\n      ref=\"postList\"\r\n      v-for=\"post in displayedPosts\"\r\n      :key=\"post.key\"\r\n      :value=\"post.title\"\r\n      :per-page=\"perPage\"\r\n    >\r\n    {{ post.title }}\r\n    </div>\r\n    <nav aria-label=\"Page navigation example\">\r\n            <ul class=\"pagination\">\r\n                <li class=\"page-item\">\r\n                    <button\r\n                      type=\"button\"\r\n                      class=\"page-link\"\r\n                      v-if=\"page != 1\"\r\n                      @click=\"page--\"\r\n                      >\r\n                        Previous\r\n                      </button>\r\n                </li>\r\n                <li class=\"page-item\">\r\n                    <button\r\n                      type=\"button\"\r\n                      class=\"page-link\"\r\n                      v-for=\"pageNumber in pages.slice(page-1, page+5)\"\r\n                      @click=\"page = pageNumber\"\r\n                      :key=\"pageNumber\"\r\n                    >\r\n                      {{ pageNumber }}\r\n                    </button>\r\n                </li>\r\n                <li class=\"page-item\">\r\n                    <button type=\"button\" @click=\"page++\" v-if=\"page < pages.length\" class=\"page-link\"> Next </button>\r\n                </li>\r\n            </ul>\r\n        </nav> \r\n  </div>\r\n</template>\r\n\r\n<script>\r\nvar axios = require('axios');\r\n\r\nexport default {\r\n  static: {\r\n  },\r\n  data() {\r\n    return {\r\n      posts: [],\r\n      perPage: 10,\r\n      page: 1,\r\n      pages: []\r\n    };\r\n  },\r\n  mounted () {\r\n    axios\r\n      .get(`http://jsonplaceholder.typicode.com/posts`)\r\n      .then(response => (this.getPosts(response.data)))\r\n  },\r\n  methods: {\r\n    getPosts(response) {\r\n      response.forEach((element) => {\r\n        this.posts.push({\r\n          key: element.id,\r\n          title: element.title\r\n        })\r\n      })\r\n    },\r\n    numPages() {\r\n      let numOfPages = Math.ceil(this.posts.length / this.perPage);\r\n      for (let index = 1; index <= numOfPages; index++) {\r\n        this.pages.push(index);\r\n      }\r\n    },\r\n    paginate (posts) {\r\n      let page = this.page;\r\n      let perPage = this.perPage;\r\n      let from = (page * perPage) - perPage;\r\n      let to = (page * perPage);\r\n      return posts.slice(from, to);\r\n    }\r\n  },\r\n  computed: {\r\n    displayedPosts () {\r\n      return this.paginate(this.posts);\r\n    }\r\n  },\r\n  watch: {\r\n    posts () {\r\n      this.numPages();\r\n    }\r\n  },\r\n  created() {\r\n    this.getPosts();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n  .input-container {\r\n    width: 70%;\r\n    margin: 0 auto;\r\n  }\r\n  #post-title {\r\n    text-transform: uppercase;\r\n    height: 50px;\r\n    background: #ddd;\r\n    margin: 5px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-radius: 10px;\r\n    padding: 10px;\r\n  }\r\n  button.page-link {\r\n    display: inline-block;\r\n  }\r\n  button.page-link {\r\n    font-size: 20px;\r\n    color: #29b3ed;\r\n    font-weight: 500;\r\n  }\r\n</style>"]}]}